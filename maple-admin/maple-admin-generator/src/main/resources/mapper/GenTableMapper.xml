<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maple.generator.mapper.GenTableMapper">


    <resultMap type="com.maple.generator.model.model.GenTableModel" id="GenTableResult">
        <id property="id" column="id"/>
        <result property="tableName" column="table_name"/>
        <result property="tableComment" column="table_comment"/>
        <result property="subTableName" column="sub_table_name"/>
        <result property="subTableFkName" column="sub_table_fk_name"/>
        <result property="className" column="class_name"/>
        <result property="tplCategory" column="tpl_category"/>
        <result property="packageName" column="package_name"/>
        <result property="moduleName" column="module_name"/>
        <result property="businessName" column="business_name"/>
        <result property="functionName" column="function_name"/>
        <result property="functionAuthor" column="function_author"/>
        <result property="genType" column="gen_type"/>
        <result property="genPath" column="gen_path"/>
        <result property="treeCode" column="tree_code"/>
        <result property="treeParentCode" column="tree_parent_code"/>
        <result property="treeName" column="tree_name"/>
        <result property="parentMenuId" column="parent_menu_id"/>
        <result property="parentMenuName" column="parent_menu_name"/>
        <result property="options" column="options"/>
        <collection property="columns" javaType="java.util.List" resultMap="GenTableColumnResult"/>
    </resultMap>

    <resultMap type="com.maple.generator.model.model.GenTableColumnModel" id="GenTableColumnResult">
        <result property="id" column="column_id"/>
        <result property="tableId" column="table_id"/>
        <result property="columnName" column="column_name"/>
        <result property="columnComment" column="column_comment"/>
        <result property="columnType" column="column_type"/>
        <result property="javaType" column="java_type"/>
        <result property="javaField" column="java_field"/>
        <result property="isPk" column="is_pk"/>
        <result property="isIncrement" column="is_increment"/>
        <result property="isRequired" column="is_required"/>
        <result property="isInsert" column="is_insert"/>
        <result property="isEdit" column="is_edit"/>
        <result property="isList" column="is_list"/>
        <result property="isQuery" column="is_query"/>
        <result property="queryType" column="query_type"/>
        <result property="htmlType" column="html_type"/>
        <result property="dictType" column="dict_type"/>
        <result property="sort" column="sort"/>
        <result property="createId" column="create_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateId" column="update_id"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="selectDbTableList" resultType="com.maple.generator.model.model.GenTableModel">
        select
        table_name,
        table_comment,
        create_time,
        update_time
        from information_schema.tables
        where table_schema = (select database())
        AND table_name NOT LIKE 'qrtz_%' AND table_name NOT LIKE 'gen_%'
        AND table_name NOT IN (select table_name from gen_table)
        <if test="req.tableName != null and req.tableName != ''">
            AND lower(table_name) like lower(concat('%', #{req.tableName}, '%'))
        </if>
        <if test="req.tableNames!= null and req.tableNames.size() > 0">
            and table_name in
            <foreach collection="req.tableNames" item="req.tableName" open="(" separator="," close=")">
                #{req.tableName}
            </foreach>
        </if>
        <if test="req.tableComment != null and req.tableComment != ''">
            AND lower(table_comment) like lower(concat('%', #{req.tableComment}, '%'))
        </if>
    </select>
    <select id="getPageList" resultType="com.maple.generator.model.model.GenTableModel">
        select * from gen_table
        <where>
            <if test="req.tableName">
                and table_name like concat('%', #{req.tableName},'%')
            </if>
            <if test="req.tableComment">
                and table_comment like concat('%', #{req.tableComment},'%')
            </if>
        </where>
        order by create_time
    </select>
    <select id="selectGenTable" resultMap="GenTableResult">
        <include refid="selectGenTableSql"/>
    </select>
    <select id="selectGenTableList" resultMap="GenTableResult">
        <include refid="selectGenTableSql"/>
    </select>

    <sql id="selectGenTableSql">
        SELECT t.id,
        t.table_name,
        t.table_comment,
        t.sub_table_name,
        t.sub_table_fk_name,
        t.class_name,
        t.tpl_category,
        t.package_name,
        t.module_name,
        t.business_name,
        t.function_name,
        t.function_author,
        t.gen_type,
        t.gen_path,
        t.options,
        t.tree_code,
        t.tree_parent_code,
        t.tree_name,
        t.parent_menu_id,
        t.parent_menu_name,
        t.remark,
        c.id as column_id,
        c.column_name,
        c.column_comment,
        c.column_type,
        c.java_type,
        c.java_field,
        c.is_pk,
        c.is_increment,
        c.is_required,
        c.is_insert,
        c.is_edit,
        c.is_list,
        c.is_query,
        c.query_type,
        c.html_type,
        c.dict_type,
        c.sort
        FROM gen_table t
        LEFT JOIN gen_table_column c ON t.id = c.table_id
        <where>
            <if test="req.id != null">
                and t.id = #{req.id}
            </if>
            <if test="req.tableName != null and req.tableName != ''">
                and t.table_name = #{req.tableName}
            </if>
        </where>
        order by c.sort
    </sql>
</mapper>
