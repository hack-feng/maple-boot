<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maple.website.mapper.WebArticleMapper">
    
    <sql id="selectWebArticleVo">
        select id, category_id, parent_id, article_type, title, description, img, sort_num, keywords, author, 
               original_url, is_top, is_hot, status, source, level, read_num, download_num, collect_num, like_num, 
               comment_num, create_id, create_time, update_id, update_time from web_article
    </sql>
    <select id="getPageList" resultType="com.maple.website.vo.model.WebArticleModel">
        <include refid="selectWebArticleVo"/>
        <where>
            <if test="webArticle.categoryId != null"> 
                and category_id = #{webArticle.categoryId}
            </if>
            <if test="webArticle.title != null and webArticle.title != ''"> 
                and title = #{webArticle.title}
            </if>
            <if test="webArticle.description != null and webArticle.description != ''"> 
                and description = #{webArticle.description}
            </if>
            <if test="webArticle.img != null and webArticle.img != ''"> 
                and img = #{webArticle.img}
            </if>
            <if test="webArticle.keywords != null and webArticle.keywords != ''"> 
                and keywords = #{webArticle.keywords}
            </if>
            <if test="webArticle.author != null and webArticle.author != ''"> 
                and author = #{webArticle.author}
            </if>
            <if test="webArticle.originalUrl != null and webArticle.originalUrl != ''"> 
                and original_url = #{webArticle.originalUrl}
            </if>
            <if test="webArticle.isTop != null"> 
                and is_top = #{webArticle.isTop}
            </if>
            <if test="webArticle.isHot != null"> 
                and is_hot = #{webArticle.isHot}
            </if>
            <if test="webArticle.status != null and webArticle.status != ''"> 
                and status = #{webArticle.status}
            </if>
            <if test="webArticle.source != null"> 
                and source = #{webArticle.source}
            </if>
            <if test="webArticle.level != null"> 
                and level = #{webArticle.level}
            </if>
            <if test="webArticle.readNum != null"> 
                and read_num = #{webArticle.readNum}
            </if>
            <if test="webArticle.collectNum != null"> 
                and collect_num = #{webArticle.collectNum}
            </if>
            <if test="webArticle.likeNum != null"> 
                and like_num = #{webArticle.likeNum}
            </if>
            <if test="webArticle.commentNum != null"> 
                and comment_num = #{webArticle.commentNum}
            </if>
        </where>
        order by id desc
    </select>
    
    <select id="selectReadAndCollectNum" resultType="com.maple.website.vo.model.WebCategoryModel">
        select SUM(read_num)    as readNum,
               SUM(collect_num) as collectNum,
               COUNT(*)         AS titleNum
        from web_article
        where category_id = #{categoryId}
    </select>
    
    <select id="getPreviousTitle" resultType="com.maple.website.vo.model.WebArticleModel">
        SELECT id, title
        FROM web_article
        WHERE category_id = #{req.categoryId}
          AND sort_num = (
            select max(sort_num)
            from web_article
            where status = 1
              and sort_num &lt; #{req.sortNum}
              and category_id = #{req.categoryId}
            order by is_top desc, sort_num, id)
    </select>
    
    <select id="getNextTitle" resultType="com.maple.website.vo.model.WebArticleModel">
        SELECT id, title
        FROM web_article
        WHERE category_id = #{req.categoryId}
          AND sort_num = (
            select min(sort_num)
            from web_article
            where status = 1
              and sort_num > #{req.sortNum}
              and category_id = #{req.categoryId}
            order by is_top desc, sort_num, id)
    </select>
    
    <select id="getMaxSortNum" resultType="java.lang.Long">
        select max(sort_num) + 10
        from web_article
        where category_id = #{categoryId}
    </select>
</mapper>