-- ------------------------------------------------------------------------
-- 配置网站端在管理端的菜单数据，角色关联数据不做添加，各位小伙伴自行到角色管理关联
-- ------------------------------------------------------------------------
INSERT INTO `usc_menu` (`name`, `title`, `menu_type`, `parent_id`, `ancestors`, `sort_num`, `path`, `component`, `redirect`, `link_url`, `is_iframe`, `is_link`, `is_keep_alive`, `is_hide`, `is_affix`, `status`, `perms`, `icon`, `remark`, `create_id`, `create_time`, `update_id`, `update_time`) VALUES
('', '网站管理', 'M', 0, '', 4, '', '', '', '', 0, 0, 1, 0, 0, 1, '', 'iconfont icon-diqiu1', '', 1, NOW(), 1, NOW()),
('webMenu', '网站菜单', 'C', 12, '12', 6, '/website/webMenu', 'website/webMenu/index', NULL, '', 0, 0, 1, 0, 0, 1, '', 'iconfont icon-juxingkaobei', '', 1, NOW(), 1, NOW()),
('config', '网站配置', 'C', 12, '12', 7, '/website/config', 'website/config/index', NULL, '', 0, 0, 1, 0, 0, 1, '', 'iconfont icon-xitongshezhi', '', 1, NOW(), 1, NOW()),
('userComment', '用户评论', 'C', 12, '12', 8, '/website/userComment', 'website/userComment/index', NULL, '', 0, 0, 1, 0, 0, 1, '', 'ele-ChatLineSquare', '', 1, NOW(), 1, NOW()),
('userOperation', '用户操作', 'C', 12, '12', 9, '/website/userOperation', 'website/userOperation/index', NULL, '', 0, 0, 1, 0, 0, 1, '', 'iconfont icon-xuanzeqi', '', 1, NOW(), 1, NOW()),
('webUser', '网站用户', 'C', 12, '12', 1, '/website/webUser', 'website/webUser/index', NULL, '', 0, 0, 1, 0, 0, 1, '', 'ele-User', '', 1, NOW(), 1, NOW()),
('article', '内容中心', 'C', 12, '12', 3, '/website/article', 'website/article/index', NULL, '', 0, 0, 1, 0, 0, 1, '', 'ele-Memo', '', 1, NOW(), 4, NOW()),
('category', '网站类目', 'C', 12, '12', 2, '/website/category', 'website/category/index', NULL, '', 0, 0, 1, 0, 0, 1, '', 'iconfont icon-shuxingtu', '', 1, NOW(), 1, NOW()),

-- ------------------------------------------------------------------------
-- 网站端相关的表结构及模拟数据
-- ------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS `web_article` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
    `category_id` bigint(20) DEFAULT NULL COMMENT '所属类目id',
    `parent_id` bigint(20) DEFAULT '0' COMMENT '父节点id',
    `data_type` tinyint(4) DEFAULT NULL COMMENT '数据类型 （1：文章 2：资源 3：链接）',
    `data_kind` tinyint(4) DEFAULT NULL COMMENT '数据种类，和data_type联动',
    `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '标题',
    `description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '描述',
    `img` varchar(255) DEFAULT NULL COMMENT '图片',
    `sort_num` bigint(20) DEFAULT '0' COMMENT '排序',
    `keywords` varchar(255) DEFAULT NULL COMMENT '关键词',
    `author` varchar(255) DEFAULT NULL COMMENT '作者',
    `url_type` tinyint(4) DEFAULT NULL COMMENT '链接类型，和data_type联动',
    `original_url` varchar(255) DEFAULT NULL COMMENT '原始地址，和data_type联动',
    `is_top` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否置顶',
    `is_hot` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否热门',
    `status` varchar(50) DEFAULT NULL COMMENT '状态',
    `source` tinyint(4) NOT NULL DEFAULT '1' COMMENT '来源',
    `level` int(11) DEFAULT '1' COMMENT '星级',
    `read_num` int(11) NOT NULL DEFAULT '0' COMMENT '阅读数量',
    `download_num` int(11) NOT NULL DEFAULT '0' COMMENT '下载数量',
    `collect_num` int(11) NOT NULL DEFAULT '0' COMMENT '收藏数量',
    `like_num` int(11) NOT NULL DEFAULT '0' COMMENT '点赞数量',
    `comment_num` int(11) NOT NULL DEFAULT '0' COMMENT '评论数量',
    `relevance_article_id` bigint(20) DEFAULT NULL COMMENT '关联文章ID（资源时使用）',
    `create_id` bigint(20) DEFAULT NULL COMMENT '创建人',
    `create_time` datetime DEFAULT NULL COMMENT '创建日期',
    `update_id` bigint(20) DEFAULT NULL COMMENT '更新人',
    `update_time` datetime DEFAULT NULL COMMENT '更新日期',
    PRIMARY KEY (`id`) USING BTREE,
    UNIQUE KEY `UNI_CATEGORY_SORT` (`category_id`,`sort_num`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COMMENT='网站文章表';

INSERT INTO `web_article` (`id`, `category_id`, `parent_id`, `data_type`, `data_kind`, `title`, `description`, `img`, `sort_num`, `keywords`, `author`, `url_type`, `original_url`, `is_top`, `is_hot`, `status`, `source`, `level`, `read_num`, `download_num`, `collect_num`, `like_num`, `comment_num`, `relevance_article_id`, `create_id`, `create_time`, `update_id`, `update_time`) VALUES
(1, 2, 0, 1, 1, '【Maple-Boot】项目简介', '基于SpringBoot+Vue3开发的轻量级快速开发脚手架。包括前端、后端，适合有一定编码经验的，想学习整个项目搭建的小伙伴，本项目是最为适合的，当然想自己搞项目的小伙伴，如果你需要一个项目脚手架，本项目也是不错的选择。主要包括用户权限管理和代码生成工具。麻雀虽小，五脏俱全...', 'https://image.xiaoxiaofeng.site/blogArticle/1/xxf-2404170827217836.jpg', 1, 'SpringBoot,项目脚手架,低代码,SpringBoot生成项目', '笑小枫', 2, '', 0, 0, '1', 1, 1, 1, 0, 0, 0, 0, NULL, 4, '2024-08-05 15:48:02', 4, '2024-08-05 15:48:02'),
(2, 2, 0, 1, 1, '【Maple-Boot】项目规范', 'Maple-Boot开源项目的基础规范，一些表设计思想，对象之间转换，项目目录规范等...', 'https://image.xiaoxiaofeng.site/blogArticle/1/xxf-2404170827217836.jpg', 2, 'MapleBoot,开源,生成代码,低代码,项目规范', '笑小枫', 2, '', 0, 0, '1', 1, 1, 0, 0, 0, 0, 0, NULL, 4, '2024-08-05 15:49:10', 4, '2024-08-05 15:49:10'),
(3, 2, 0, 1, 1, '【Maple-Boot】项目启动部署', '本文主要介绍了如何导入Maple Boot项目，本地如何启动项目，如果部署项目。本文通过详细的操作步骤详细的介绍了如何操作，让我们更好的使用Maple Boot项目吧。', 'https://image.xiaoxiaofeng.site/blogArticle/1/xxf-2404170827217836.jpg', 3, 'MapleBoot,开源项目,项目启动部署', '笑小枫', 2, '', 0, 0, '1', 1, 1, 0, 0, 0, 0, 0, NULL, 4, '2024-08-05 15:49:42', 4, '2024-08-05 15:49:42'),
(4, 2, 0, 1, 1, '【Maple-Boot】生成工具介绍（单表表格功能）', '使用Maple-Boot开源项目生成一个单表的增删改查功能，包括Java代码和Vue代码。快速生成代码是Maple Boot的基础功能之一，可以使用这个功能更快速的完成开发，减少代码的工作量。', 'https://image.xiaoxiaofeng.site/blogArticle/1/xxf-2404170827217836.jpg', 4, 'MapleBoot,开源项目,生成工具,单表生成', '笑小枫', 2, '', 0, 0, '1', 1, 1, 0, 0, 0, 0, 0, NULL, 4, '2024-08-05 15:50:06', 4, '2024-08-05 15:50:06'),
(5, 2, 0, 1, 1, '【Maple-Boot】生成工具介绍（树型结构功能）', '使用Maple-Boot开源项目生成一个树表的增删改查功能，包括Java代码和Vue代码。快速生成代码是Maple Boot的基础功能之一，可以使用这个功能更快速的完成开发，减少代码的工作量。', 'https://image.xiaoxiaofeng.site/blogArticle/1/xxf-2404170827217836.jpg', 5, 'MapleBoot,开源项目,生成工具,树表生成', '笑小枫', 2, '', 0, 0, '1', 1, 1, 0, 0, 0, 0, 0, NULL, 4, '2024-08-05 15:50:29', 4, '2024-08-05 15:50:29'),
(6, 2, 0, 1, 1, '【Maple-Boot】生成工具介绍（父子表功能）', '使用Maple-Boot开源项目生成一个父子表的增删改查功能，包括Java代码和Vue代码。快速生成代码是Maple Boot的基础功能之一，可以使用这个功能更快速的完成开发，减少代码的工作量。', 'https://image.xiaoxiaofeng.site/blogArticle/1/xxf-2404170827217836.jpg', 6, 'MapleBoot,开源项目,生成工具,父子表生成', '笑小枫', 2, '', 0, 0, '1', 1, 1, 0, 0, 0, 0, 0, NULL, 4, '2024-08-05 15:50:52', 4, '2024-08-05 15:50:52'),
(7, 2, 0, 1, 1, '【Maple-Boot】权限控制使用介绍（菜单权限、按钮权限、数据权限）', '使用Maple-Boot开源项目的权限控制功能，本文描述了项目中菜单权限、按钮权限、数据权限如何使用。', 'https://image.xiaoxiaofeng.site/blogArticle/1/xxf-2404170827217836.jpg', 7, 'MapleBoot,开源项目,生成工具,权限控制', '笑小枫', 2, '', 0, 0, '1', 1, 1, 0, 0, 0, 0, 0, NULL, 4, '2024-08-05 15:51:21', 4, '2024-08-05 15:51:21'),
(8, 8, 0, 3, 1, 'MapleBoot开源链接（Gitee）', 'MapleBoot开源项目的Gitee链接地址。欢迎各位小伙伴star一下哟', '', 3, '', '', 2, 'https://gitee.com/hack-feng/maple-boot/', 0, 0, '1', 1, 1, 0, 0, 0, 0, 0, NULL, 4, '2024-08-05 15:59:49', 4, '2024-08-05 16:01:50'),
(9, 8, 0, 3, 1, 'MapleBoot开源链接（Github）', 'MapleBoot开源项目的Github链接地址。欢迎各位小伙伴star一下哟', '', 4, '', '', 2, 'https://github.com/hack-feng/maple-boot/', 0, 0, '1', 1, 1, 0, 0, 0, 0, 0, NULL, 4, '2024-08-05 16:01:22', 4, '2024-08-05 16:01:22'),
(10, 8, 0, 3, 3, '笑小枫的网站', '笑小枫的网站，开发者的福利网站，速去打卡收藏吧', '', 1, '', '', 2, 'https://www.xiaoxiaofeng.com', 1, 1, '1', 1, 1, 1, 0, 0, 0, 0, NULL, 4, '2024-08-05 16:03:24', 4, '2024-08-05 16:03:24'),
(13, 8, 0, 3, 3, 'MapleBoot管理端', 'MapleBoot开源项目的管理端体验地址，和本项目是配套的哟，本项目属于网站端，该地址属于管理端~', '', 2, '', '', 2, 'https://maple.xiaoxiaofeng.com', 0, 1, '1', 1, 1, 0, 0, 0, 0, 0, NULL, 4, '2024-08-05 16:05:39', 4, '2024-08-05 16:05:39');

CREATE TABLE IF NOT EXISTS `web_category` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
    `icon` varchar(255) DEFAULT NULL COMMENT '图标',
    `name` varchar(50) NOT NULL COMMENT '名称',
    `description` varchar(255) DEFAULT NULL COMMENT '描述',
    `parent_id` bigint(20) DEFAULT '0' COMMENT '父节点id',
    `ancestors` varchar(255) DEFAULT NULL COMMENT '祖级菜单',
    `sort_num` bigint(20) DEFAULT '0' COMMENT '排序',
    `is_top` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否置顶',
    `is_hot` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否热门',
    `target` varchar(20) DEFAULT '_self' COMMENT '目标地址',
    `url` varchar(1023) DEFAULT NULL COMMENT '跳转地址',
    `is_valid` tinyint(1) DEFAULT '1' COMMENT '是否有效',
    `create_id` bigint(20) DEFAULT NULL COMMENT '创建人',
    `create_time` datetime DEFAULT NULL COMMENT '创建日期',
    `update_id` bigint(20) DEFAULT NULL COMMENT '更新人',
    `update_time` datetime DEFAULT NULL COMMENT '更新日期',
    PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COMMENT='网站类目表';

INSERT INTO `web_category` (`id`, `icon`, `name`, `description`, `parent_id`, `ancestors`, `sort_num`, `is_top`, `is_hot`, `target`, `url`, `is_valid`, `create_id`, `create_time`, `update_id`, `update_time`) VALUES
(1, 'https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417161400.jpg?xxfjava', '笑小枫开源系列', '笑小枫整理发布的系列的开源项目，包括SpringBoot+Vue3快速开发脚手架、SpringBoot整合中间件、SpringBoot项目搭建等项目', 0, '', 1, 0, 1, '', 'blog', 1, 1, '2024-06-03 15:09:11', 1, '2024-06-04 09:46:25'),
(2, 'https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417161400.jpg?xxfjava', 'MapleBoot使用手册', '基于SpringBoot+Vue3开发的轻量级快速开发脚手架。包括前端、后端，适合有一定编码经验的，想学习整个项目搭建的小伙伴，本项目是最为适合的，当然想自己搞项目的小伙伴，如果你需要一个项目脚手架，本项目也是不错的选择。主要包括用户权限管理和代码生成工具。麻雀虽小，五脏俱全...', 1, '1', 0, 1, 1, '', 'blog', 1, 1, '2024-06-04 09:45:45', 1, '2024-06-04 09:45:45'),
(3, 'https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417161400.jpg?xxfjava', '面试合集', '后端面试合集', 0, '', 1, 0, 1, '笑小枫', 'blog', 1, 4, '2024-07-22 15:00:03', 4, '2024-07-22 15:00:03'),
(4, 'https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417161400.jpg?xxfjava', 'JAVA基础', 'JAVA基础', 3, '3', 1, 1, 1, '', 'blog', 1, 4, '2024-07-22 15:00:38', 4, '2024-07-22 15:00:38'),
(5, 'https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417161400.jpg?xxfjava', '多线程与锁', '多线程与锁', 3, '3', 2, 0, 1, '笑小枫', 'blog', 1, 4, '2024-07-22 15:01:01', 4, '2024-07-22 15:01:11'),
(6, 'https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417161400.jpg?xxfjava', 'JAVA集合', 'JAVA集合', 3, '3', 3, 0, 1, '', 'blog', 1, 4, '2024-07-22 15:01:41', 4, '2024-07-25 09:48:29'),
(8, '', '笑小枫链接合集', '小枫链接合集', 0, '0', 3, 0, 0, '笑小枫', '', 1, 4, '2024-08-05 15:56:58', 4, '2024-08-05 15:57:09');

CREATE TABLE IF NOT EXISTS `web_config` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '参数主键',
    `config_name` varchar(100) DEFAULT '' COMMENT '参数名称',
    `config_key` varchar(100) DEFAULT '' COMMENT '参数键名',
    `config_value` varchar(500) DEFAULT '' COMMENT '参数键值',
    `is_system` tinyint(1) DEFAULT '0' COMMENT '是否内置',
    `create_id` bigint(20) DEFAULT NULL COMMENT '创建人id',
    `create_time` datetime DEFAULT NULL COMMENT '创建时间',
    `update_id` bigint(20) DEFAULT NULL COMMENT '修改人id',
    `update_time` datetime DEFAULT NULL COMMENT '更新时间',
    `remark` varchar(500) DEFAULT NULL COMMENT '备注',
    PRIMARY KEY (`id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='网站配置表';

INSERT INTO `web_config` (`id`, `config_name`, `config_key`, `config_value`, `is_system`, `create_id`, `create_time`, `update_id`, `update_time`, `remark`) VALUES
(1, '网站名称', 'website_name', '笑小枫', 1, 1, '2024-06-06 10:43:52', 1, '2024-06-06 10:43:52', '笑小枫'),
(2, '网站ICP', 'ICP', '鲁ICP备2021024782号', 1, 1, '2024-06-06 10:45:24', 1, '2024-06-06 10:45:42', '');

CREATE TABLE IF NOT EXISTS `web_content` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
    `article_id` bigint(20) NOT NULL COMMENT '简介id',
    `content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci COMMENT '内容',
    `original_content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci COMMENT '原始内容',
    `create_id` bigint(20) DEFAULT NULL COMMENT '创建人',
    `create_time` datetime DEFAULT NULL COMMENT '创建日期',
    `update_id` bigint(20) DEFAULT NULL COMMENT '更新人',
    `update_time` datetime DEFAULT NULL COMMENT '更新日期',
    PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 COMMENT='网站文章内容';

INSERT INTO `web_content` (`id`, `article_id`, `content`, `original_content`, `create_id`, `create_time`, `update_id`, `update_time`) VALUES
(1, 1, NULL, '<div align="center">\n	<img src="https://image.xiaoxiaofeng.site/blog/2024/04/15/xxf-20240415111508.svg?xxfjava">\n    <h2>\n        基于SpringBoot+Vue3开发的轻量级快速开发脚手架\n    </h3>\n	<p align="center">\n        <a target="_blank" href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">\n            <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134430.png?xxfjava" alt="jdk-8" />\n        </a>\n		<a href="https://v3.vuejs.org/" target="_blank">\n			<img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134539.png?xxfjava" alt="vue">\n		</a>\n		<a href="https://gitee.com/lyt-top/vue-next-admin/blob/master/LICENSE" target="_blank">\n		  <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134340.png?xxfjava" alt="license">\n		</a>\n	</p>\n</div>\n\n## 🍁项目简介\n\n一个通用的前、后端项目模板\n\n一个快速开发管理系统的项目\n\n一个可以生成SpringBoot+Vue代码的项目\n\n一个持续迭代的开源项目\n\n一个程序员的心血合集\n\n度过严寒，终有春日；挺过酷暑，必有丰收。\n\n[GitHub地址](https://github.com/hack-feng/maple-boot/)\n\n[Gitee地址](https://gitee.com/hack-feng/maple-boot)\n\n[文档地址（更新中）](https://www.xiaoxiaofeng.com/category/49)\n\n[管理端演示地址（初版已上线）](https://maple.xiaoxiaofeng.com/)\n\n[网站端演示地址（初版已上线）](https://maple-boot.xiaoxiaofeng.com/)\n\n## 🚀项目架构\n\n**后端项目**\n\n项目主要使用SpringBoot + Mybatis Plus开发，代码生成模块参考[若依](https://gitee.com/y_project/RuoYi)框架进行改造。\n\n* JDK8\n* SpringBoot  v:2.7.12\n* Mybatis Plus  v:3.5.2\n* Lombok\n* Mysql  v:8.0+\n* Redis\n* ...\n\n**前端项目**\n\n前端基于开源项目[vue-next-admin](https://gitee.com/lyt-top/vue-next-admin)框架进行开发改造。\n\n* vue3.x\n* CompositionAPI setup 语法糖\n* typescript\n* vite\n* element plus\n* vue-router-next\n* pinia\n\n## 🎨项目功能\n\n| 功能名称 |                           功能简介                           | 功能状态 |\n| :------: | :----------------------------------------------------------: | :------: |\n| 用户管理 |                       管理平台用户管理                       |    ✔     |\n| 角色管理 |                       管理平台角色管理                       |    ✔     |\n| 菜单管理 |                       管理平台菜单管理                       |    ✔     |\n| 部门管理 |                      树表结构生成实验田                      |    ✔     |\n| 字典管理 |                     一对多模式生成实验田                     |    ✔     |\n| 系统配置 |                        单表生成实验田                        |    ✔     |\n| 代码生成 | 生成SpringBoot+Vue代码。单表生成、树表结构生成、一对多模式生成 |    ✔     |\n| 更多功能 | 本项目只做最基础的功能，后续功能化集成会陆续开源其它项目，欢迎大家持续关注[笑小枫](https://www.xiaoxiaofeng.com) |    ❤     |\n\n## 💖功能欣赏\n\n登录页\n\n![image-20240417141408120](https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417141408.png?xxfjava)\n\n首页\n\n![image-20240417141854786](https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417141855.png?xxfjava)\n\n用户管理\n\n![image-20240417141432864](https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417141432.png?xxfjava)\n\n菜单管理\n\n![image-20240417141502304](https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417141502.png?xxfjava)\n\n字典编辑页面\n\n![image-20240417141537529](https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417141537.png?xxfjava)\n\n生成工具-生成代码配置\n\n![image-20240417141641747](https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417141641.png?xxfjava)\n\n生成工具-生成代码预览\n\n![image-20240417141614037](https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417141614.png?xxfjava)\n\n## 🏰项目结构\n\n**服务模块定义**\n\n~~~ABAP\nmaple-admin-system             ------------ 模块名称\n├─src\n│  └─main\n│      ├─java\n│      │  └─com.maple.system   ------------ 模块目录\n│      │     ├─bean          ------------ 实体类\n│      │     ├─mapper        ------------ mapper类\n│      │     ├─service       ------------ service接口类\n│      │     │  └─impl       ------------ service接口实现类\n│      │     └─vo\n│      │        ├─model      ------------ 对外实体Model类\n│      │        └─query      ------------ 请求参数对象\n│      └─resources\n│          └─mapper          ------------ mapper的xml文件\n└─pom.xml                    ------------ maven配置文件\n~~~\n\n**Rest接口模块定义**\n\n~~~ABAP\nmaple-admin-rest                   ----------- 模块名称\n├─src\n│  └─main\n│      ├─java\n│      │  └─com.maple.rest         ----------- 模块目录\n│      │     ├─aop                 ----------- AOP切面配置\n│      │     ├─config              ----------- 启动项配置\n│      │     ├─controller          ----------- Controller接口\n│      │     │  ├─common           ----------- 通用接口\n│      │     │  └─manage           ----------- 管理模块接口\n│      │     │     ├─system        ----------- 管理模块-系统设置接口\n│      │     │     ├─tool          ----------- 管理模块-工具类接口\n│      │     │     └─usc           ----------- 管理模块-系统用户接口\n│      │     ├─job                 ----------- 定时任务\n│      │     └─Application.java    ----------- 项目启动类\n│      └─resources                 ----------- 资源目录\n│          └─WEB-INF\n│              └─resources\n└─pom.xml                          ----------- Maven配置文件\n~~~\n\n**前端模块定义**\n\n~~~ABAP\nmaple-web\n├─public             ---------- 公开文件\n└─src                           \n    ├─api            ---------- 接口地址\n    │  └─system      ---------- 系统管理接口\n    ├─assets         ---------- 应用程序使用的静态资源文件\n    ├─components     ---------- 应用程序的公共组件\n    ├─directive      ---------- Vue的自定义指令\n    ├─i18n           ---------- 放置国际化多语言配置文件\n    ├─layout         ---------- 项目的布局.vue模板\n    ├─router         ---------- 应用程序的路由配置\n    ├─stores         ---------- 应用程序的状态管理工具\n    ├─theme          ---------- 应用程序的主题配置\n    ├─types          ---------- 数据类型\n    ├─utils          ---------- 自己封装的一些全局性的js功能文件\n    └─views          ---------- 应用程序的页面\n~~~\n', 4, '2024-08-05 15:48:02', 4, '2024-08-05 15:48:02'),
(2, 2, NULL, '<div align="center">\n	<img src="https://image.xiaoxiaofeng.site/blog/2024/04/15/xxf-20240415111508.svg?xxfjava">\n    <h2>\n        基于SpringBoot+Vue3开发的轻量级快速开发脚手架\n    </h3>\n	<p align="center">\n        <a target="_blank" href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">\n            <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134430.png?xxfjava" alt="jdk-8" />\n        </a>\n		<a href="https://v3.vuejs.org/" target="_blank">\n			<img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134539.png?xxfjava" alt="vue">\n		</a>\n		<a href="https://gitee.com/lyt-top/vue-next-admin/blob/master/LICENSE" target="_blank">\n		  <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134340.png?xxfjava" alt="license">\n		</a>\n	</p>\n</div>\n\n## 🍁项目简介\n\n一个通用的前、后端项目模板\n\n一个快速开发管理系统的项目\n\n一个可以生成SpringBoot+Vue代码的项目\n\n一个持续迭代的开源项目\n\n一个程序员的心血合集\n\n度过严寒，终有春日；挺过酷暑，必有丰收。\n\n[GitHub地址](https://github.com/hack-feng/maple-boot/)\n\n[Gitee地址](https://gitee.com/hack-feng/maple-boot)\n\n[文档地址（更新中）](https://www.xiaoxiaofeng.com/category/49)\n\n[管理端演示地址（初版已上线）](https://maple.xiaoxiaofeng.com/)\n\n[网站端演示地址（初版已上线）](https://maple-boot.xiaoxiaofeng.com/)\n\n## 简介\n\n本项目大方向遵循阿里巴巴编码规范，其中有些设计可能因作者习惯原因，有些不一样，这里就不强制一致了。下面罗列一下项目常用到的一些设计规范。\n\n## 数据库设计规范\n\n数据库暂以**单表单库**的规则设计，如后期肯定会有**分库分表**，可在设计前期根据自己需求调整。\n\n### 表设计\n\n表命名一般由 `模块前缀简写`＋`\'_\'` + ` 功能名`\n\n例如\n\n* 系统管理-字典类型 : `sys_dict_type`\n* 博客中心-文章标题：`blog_title`\n* 小程序-用户管理：`applet_user`\n\n---\n\n一个表中一般需要包含基础字段和部分需要的通用字段，基础字段和通用字段定义规则如下，代码生成工具中有部分直接根据基础字段的编码处理了，如需改动，可对应修改生成工具源码。\n\n**基础字段**\n\n| 字段编码    | 字段名称 | 字段类型   | 字段描述                       |\n| ----------- | -------- | ---------- | ------------------------------ |\n| id          | 主键ID   | BIGINT(20) | 默认自动递增（AUTO_INCREMENT） |\n| create_id   | 创建人id | BIGINT(20) | 新增时自动填充                 |\n| create_time | 创建时间 | DATETIME   | 新增时自动填充                 |\n| update_id   | 修改人id | BIGINT(20) | 新增、修改时自动填充           |\n| update_time | 更新时间 | DATETIME   | 新增、修改时自动填充           |\n\n**常用字段**\n\n| 字段编码  | 字段名称   | 字段类型     | 字段描述                                                |\n| --------- | ---------- | ------------ | ------------------------------------------------------- |\n| status    | 状态       | TINYINT(1)   | Java实体中，转为boolean，0：无效；1：生效               |\n| remark    | 备注       | VARCHAR(500) | 前端以文本域的形式展示填写                              |\n| sort_num  | 排序       | BIGINT(20)   | 展示以从小到大正序排序                                  |\n| is_delete | 是否删除   | TINYINT(1)   | 默认当作逻辑删除字段，使用Mybatis Plus的@TableLogic注解 |\n| version   | 数据版本号 | BIGINT(20)   | 默认当作乐观锁字段，使用Mybatis Plus的@Version注解      |\n\n**树表字段**\n\n>  **生成代码时，修改、编辑不要选择此字段，已默认处理**\n>\n> ```\n> #if($table.tree)\n>       parentId: \'\',\n>       ancestors: \'\',\n>       ancestorsArray: [],\n> #end\n> ```\n\n| 字段编码  | 字段名称 | 字段类型     | 字段描述                                        |\n| --------- | -------- | ------------ | ----------------------------------------------- |\n| parent_id | 父节点ID | BIGINT(20)   | 父节点ID，顶级节点，此字段设为0                 |\n| ancestors | 祖级列表 | VARCHAR(255) | 祖级列表，方便页面回显，数据格式如[100,101,201] |\n\n\n---\n\n## 后端设计规范\n\n### 模块定义\n\n可根据实际业务拆分模块，建议同一个功能模块拆分成一个，例如用户中心模块、博客管理模块、代码生成模块等。\n\n其中比较特殊的有一下两个模块\n\n* 通用工具类模块：`maple-admin-common`\n* Rest统一接口模块：`maple-admin-rest`\n\n其中`maple-admin-rest`为统一接口提供模块，只做差异化接口提供，尽量不做业务处理，然后统一调用功能模块的Service接口。\n\n### 接口模块定义\n\n这里以系统模块为例\n\n~~~ABAP\nmaple-admin-system             ------------ 模块名称\n├─src\n│  └─main\n│      ├─java\n│      │  └─com.maple.system   ------------ 模块目录\n│      │     ├─bean            ------------ 实体类\n│      │     ├─mapper          ------------ mapper类\n│      │     ├─service         ------------ service接口类\n│      │     │  └─impl         ------------ service接口实现类\n│      │     └─vo\n│      │        ├─model        ------------ 对外实体Model类\n│      │        └─query        ------------ 请求参数对象\n│      └─resources\n│          └─mapper            ------------ mapper的xml文件\n└─pom.xml                      ------------ maven配置文件\n~~~\n\n### Rest接口模块定义\n\n~~~ABAP\nmaple-admin-rest                   ----------- 模块名称\n├─src\n│  └─main\n│      ├─java\n│      │  └─com.maple.rest         ----------- 模块目录\n│      │     ├─aop                 ----------- AOP切面配置\n│      │     ├─config              ----------- 启动项配置\n│      │     ├─controller          ----------- Controller接口\n│      │     │  ├─common           ----------- 通用接口\n│      │     │  └─manage           ----------- 管理模块接口\n│      │     │     ├─system        ----------- 管理模块-系统设置接口\n│      │     │     ├─tool          ----------- 管理模块-工具类接口\n│      │     │     └─usc           ----------- 管理模块-系统用户接口\n│      │     ├─job                 ----------- 定时任务\n│      │     └─Application.java    ----------- 项目启动类\n│      └─resources                 ----------- 资源目录\n│          └─WEB-INF\n│              └─resources\n└─pom.xml                          ----------- Maven配置文件\n~~~\n\n### 对象字段定义\n\n字段定义和数据库字段对应关系如下\n\n| 数据库字段                                                   | Java对象字段 |\n| ------------------------------------------------------------ | ------------ |\n| **tinyint(1)**                                               | **Boolean**  |\n| int, tinyint, smallint, mediumint                            | Integer      |\n| char, varchar, nvarchar, varchar2, tinytext, text, mediumtext, longtext | String       |\n| datetime, time, date, timestamp                              | Date         |\n| bigint                                                       | Long         |\n| float                                                        | Float        |\n| double                                                       | Double       |\n| decimal                                                      | BigDecimal   |\n| 其它类型                                                     | 暂未定义     |\n\n生成代码时可以配置是否集成基础字段对象`com.maple.common.config.bean.BaseEntity`。\n\n其中`BaseEntity`对象包含上述数据库设计中的基础字段\n\n~~~java\n@Data\npublic class BaseEntity implements Serializable {\n\n    @TableId(type = IdType.AUTO)\n    protected Long id;\n\n    @ApiModelProperty("创建人id")\n    @TableField(value = "create_id", fill = FieldFill.INSERT)\n    private Long createId;\n\n    @ApiModelProperty("创建时间")\n    @TableField(value = "create_time", fill = FieldFill.INSERT)\n    private Date createTime;\n\n    @ApiModelProperty("更新人id")\n    @TableField(value = "update_id", fill = FieldFill.INSERT_UPDATE)\n    private Long updateId;\n\n    @ApiModelProperty("更新时间")\n    @TableField(value = "update_time", fill = FieldFill.INSERT_UPDATE)\n    private Date updateTime;\n}\n~~~\n\n### 实体类转换( 必须 )\n\n这里的bean为数据库一一对应的对象，默认规则设计上不做任何侵入，只在接口模块内部使用。\n\n对外部接口提供数据时，统一转换为Model对象。\n\n转换工具类：`com.maple.common.util.TransformUtils`\n\n使用方式：\n\n~~~java\n    /**\n     * 单个对象之间转换\n     */\n    public static <T> T map(Object source, Class<T> destinationClass) {\n        if (source == null) {\n            return null;\n        }\n        return MAPPER.map(source, destinationClass);\n    }\n\n    /**\n     * 集合对象之间转换\n     */\n    public static <T> List<T> mapList(Collection<?> sourceList, Class<T> destinationClass) {\n        List<T> destinationList = new ArrayList<>();\n        for (Object sourceObject : sourceList) {\n            destinationList.add(MAPPER.map(sourceObject, destinationClass));\n        }\n        return destinationList;\n    }\n\n\n	// 使用方式\n	UserModel model = TransformUtils.map(user, UserModel.class);\n	List<UserModel> modelList = TransformUtils.mapList(user, UserModel.class);\n~~~\n\n## 前端设计规范\n\n前端就不多说了，本身也是用了现有的框架，详细见框架本身源码\n\n管理端框架：[vueNextAdmin](https://lyt-top.gitee.io/vue-next-admin-doc-preview/)\n\nmaple-web\n\n~~~ABAP\nmaple-web\n├─public             ---------- 公开文件\n└─src                           \n    ├─api            ---------- 接口地址\n    │  └─system      ---------- 系统管理接口\n    ├─assets         ---------- 应用程序使用的静态资源文件\n    ├─components     ---------- 应用程序的公共组件\n    ├─directive      ---------- Vue的自定义指令\n    ├─i18n           ---------- 放置国际化多语言配置文件\n    ├─layout         ---------- 项目的布局.vue模板\n    ├─router         ---------- 应用程序的路由配置\n    ├─stores         ---------- 应用程序的状态管理工具\n    ├─theme          ---------- 应用程序的主题配置\n    ├─types          ---------- 数据类型\n    ├─utils          ---------- 自己封装的一些全局性的js功能文件\n    └─views          ---------- 应用程序的页面\n~~~\n', 4, '2024-08-05 15:49:10', 4, '2024-08-05 15:49:10'),
(3, 3, NULL, '<div align="center">\n	<img src="https://image.xiaoxiaofeng.site/blog/2024/04/15/xxf-20240415111508.svg?xxfjava">\n    <h2>\n        基于SpringBoot+Vue3开发的轻量级快速开发脚手架\n    </h3>\n	<p align="center">\n        <a target="_blank" href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">\n            <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134430.png?xxfjava" alt="jdk-8" />\n        </a>\n		<a href="https://v3.vuejs.org/" target="_blank">\n			<img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134539.png?xxfjava" alt="vue">\n		</a>\n		<a href="https://gitee.com/lyt-top/vue-next-admin/blob/master/LICENSE" target="_blank">\n		  <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134340.png?xxfjava" alt="license">\n		</a>\n	</p>\n</div>\n## 🍁项目简介\n\n一个通用的前、后端项目模板\n\n一个快速开发管理系统的项目\n\n一个可以生成SpringBoot+Vue代码的项目\n\n一个持续迭代的开源项目\n\n一个程序员的心血合集\n\n度过严寒，终有春日；挺过酷暑，必有丰收。\n\n[GitHub地址](https://github.com/hack-feng/maple-boot/)\n\n[Gitee地址](https://gitee.com/hack-feng/maple-boot)\n\n[文档地址（更新中）](https://www.xiaoxiaofeng.com/category/49)\n\n[管理端演示地址（初版已上线）](https://maple.xiaoxiaofeng.com/)\n\n[网站端演示地址（初版已上线）](https://maple-boot.xiaoxiaofeng.com/)\n\n## ☕前置条件\n\n### clone项目\n\n首先，将项目clone到本地，项目地址如下：\n\n[GitHub地址](https://github.com/hack-feng/maple-boot/)\n\n[Gitee地址](https://gitee.com/hack-feng/maple-boot)\n\n### 依赖环境\n\n这里演示在Windowns环境下，使用Idea启动下项目。\n\n启动项目，这里分为后端启动和前端启动，首先准备我们的环境依赖和开发工具:\n\n* JDK8\n* Maven\n* Mysql 8 \n* Redis 3.2+\n* NodeJs 16+ \n* IntelliJ IDEA\n\n具体安装步骤可以参考[笑小枫的按步照搬系列](https://www.xiaoxiaofeng.com/category/33)\n\n### 导入项目\n\n首先使用IntelliJ IDEA打开我们的项目`File->Open`，这里直接使用IntelliJ IDEA一起启动前端Vue项目了，所以直接打开了文件夹,如果使用VS Code打开前端项目，这里可以通过Maven的方式，只导入`maple-admin`项目即可。\n\n![image-20240419140051044](https://image.xiaoxiaofeng.site/blog/2024/04/19/xxf-20240419140051.png?xxfjava)\n\n导入完，等待加载Maven依赖即可。\n\n**前端依赖下载**\n\n关于前端依赖，使用npm导入，打开Terminal，然后进入`maple-web`目录，执行`npm i`即可，如果使用npm下载失败，可以使用淘宝镜像`cnpm i`。\n\n~~~\ncd maple-web\n\nnpm i\n~~~\n\n![image-20240419152545306](https://image.xiaoxiaofeng.site/blog/2024/04/19/xxf-20240419153008.png?xxfjava)\n\n**初始化数据库**\n\n在我们的数据库中创建数据库`maple-boot`\n\n创建后，导入我们的`schema.sql`文件中的表结构及初始化数据。后续会加入数据库版本管理工具，到时候可以自动完成创建。一步一步来吧\n\n创建完数据库，修改我们的配置文件`maple-admin-rest`下的`application-dev.yml`，将配置中的数据库连接信息替换成自己的连接。\n\n~~~yml\nspring:\n  datasource:\n    dynamic:\n      primary: xiaoxiaofeng #设置默认的数据源或者数据源组,默认值即为master\n      strict: false #严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源\n      datasource:\n        xiaoxiaofeng:\n          url: jdbc:mysql://127.0.0.1:3306/maple-boot?useUnicode=yes&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n          username: root\n          password: 123456\n          driver-class-name: com.mysql.cj.jdbc.Driver\n~~~\n\n**关于Redis**\n\nRedis启动起来就可以了，然后修改我们的配置文件`maple-admin-rest`下的`application-dev.yml`，将配置中的Redis连接信息替换成自己的连接。\n\n项目中Redis只在登录的时候做了Token过期时间，剔出功能使用，如果不想接入Redis，把这块改掉即可。\n\n~~~yml\nspring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    password: 123456\n    port: 6379\n~~~\n\n到此，我们的前置条件都满足了，接下来启动项目吧~\n\n## 🚀启动项目\n\n### 启动SpringBoot项目\n\n设置端口和使用环境\n\n修改`maple-admin-rest`下的`application.yml`文件\n\n设置端口号：6666（如果更换端口，Vue请求地址同步更换，下面会说）\n\n使用配置环境：dev\n\n~~~yml\nserver:\n  port: 6666\n  \nspring:\n  profiles:\n    active: dev\n~~~\n\n后端项目直接启动即可，可以在工具栏直接启动，也可以在`Application.java`上启动\n\n![image-20240419154032200](https://image.xiaoxiaofeng.site/blog/2024/04/19/xxf-20240419154032.png?xxfjava)\n\n启动日志信息如下：\n\n![image-20240419155127981](https://image.xiaoxiaofeng.site/blog/2024/04/19/xxf-20240419155128.png?xxfjava)\n\n### 启动Vue项目\n\n修改后端接口地址，在`vite.config.ts`文件下，这里后端管理端接口统一加了`manage`前缀，这里直接配在接口上了。\n\n![image-20240419162828669](https://image.xiaoxiaofeng.site/blog/2024/04/19/xxf-20240419162828.png?xxfjava)\n\n打开Terminal，然后进入`maple-web`目录，下载完依赖，直接使用命令`npm run dev` 启动即可。\n\n启动成功如下：\n\n![image-20240419163018102](https://image.xiaoxiaofeng.site/blog/2024/04/19/xxf-20240419163018.png?xxfjava)\n\n到此，我们的项目就启动成功了。\n\n## 🌈验证启动\n\n复制Local的连接，在谷歌浏览器中打开。\n\n可以看到我们的登录页面\n\n![image-20240419163206493](https://image.xiaoxiaofeng.site/blog/2024/04/19/xxf-20240419163206.png?xxfjava)\n\n然后点击登录按钮，如果可以成功登录，我们的项目就启动成功了。\n\n## 📢项目部署\n\n这里在Linux服务器上使用docker对项目进行部署操作。环境需要安装Docker容器。\n\n关于Docker操作，可以查看文章[【Docker安装软件，一篇就够了】Docker安装，Docker安装Mysql8.0、Redis、RabbitMQ及常用命令](https://www.xiaoxiaofeng.com/article/1068)\n\n### 后端部署\n\n首先可以修改自己服务器上的配置，和启动的端口号，然后把项目打成Jar包。\n\n![image-20240422173418771](https://image.xiaoxiaofeng.site/blog/2024/04/22/xxf-20240422173425.png?xxfjava)\n\n在`maple-admin-rest`模块下可以看到我们生成的`Jar`包；\n\n![image-20240422173545012](https://image.xiaoxiaofeng.site/blog/2024/04/22/xxf-20240422173545.png?xxfjava)\n\n将`Jar`和`Dockerfile`文件一起上传到我们服务器的指定目录（**注意：需要在同一目录**）。\n\n![image-20240423103408865](https://image.xiaoxiaofeng.site/blog/2024/04/23/xxf-20240423103408.png?xxfjava)\n\n打包镜像，执行命令\n\n~~~\ndocker build -t maple-boot:1.0.0 .\n~~~\n\n![image-20240423103639782](https://image.xiaoxiaofeng.site/blog/2024/04/23/xxf-20240423103639.png?xxfjava)\n\n启动项目，执行命令\n\n~~~\ndocker run -d --privileged=true --name maple-boot -p 6666:6666 imageId\n~~~\n\n启动完可以用`docker ps`查看一下是否启动成功。\n\n可以访问 `地址:端口号/doc.html` 查看接口文档。\n\n接口文档登录信息可以在`application-dev.yml`配置文件中调整\n\n~~~yml\nknife4j:\n  # 开启增强配置\n  enable: true\n  # 开启生产环境屏蔽\n  production: false\n  # 开启Swagger的Basic认证功能,默认是false\n  basic:\n    enable: true\n    # Basic认证用户名\n    username: xiaoxiaofeng\n    # Basic认证密码\n    password: 123456\n~~~\n\n### 前端部署\n\n后端项目启动成功后，在`.env.production`文件下修改我们的后端访问地址。\n\n~~~\n# 线上环境接口地址\nVITE_API_URL = http://xxxxxxx:6666/manage/\n~~~\n\n然后打开Terminal，进入`maple-web`目录，使用命令`npm run build` 进行打包。\n\n打包后上传到服务器上，我这里放的`/data/maple-boot-web/web`目录下\n\n![image-20240424134510284](https://image.xiaoxiaofeng.site/blog/2024/04/24/xxf-20240424134510.png?xxfjava)\n\n启动命令\n\n~~~\n# docker下载nginx镜像，也可指定版本docker pull nginx:xxx\ndocker pull nginx\n\n# 启动项目\ndocker run -d -p 80:80 -v /data/maple-boot-web/web:/usr/share/nginx/html --name maple-boot-web imageId\n~~~\n\n启动成功后，可以在浏览器中访问，然后进行登录即可，到此项目启动部署就完成了。\n\n![image-20240424134416270](https://image.xiaoxiaofeng.site/blog/2024/04/24/xxf-20240424134416.png?xxfjava)\n\n\n\n', 4, '2024-08-05 15:49:42', 4, '2024-08-05 15:49:42'),
(4, 4, NULL, '<div align="center">\n	<img src="https://image.xiaoxiaofeng.site/blog/2024/04/15/xxf-20240415111508.svg?xxfjava">\n    <h2>\n        基于SpringBoot+Vue3开发的轻量级快速开发脚手架\n    </h3>\n	<p align="center">\n        <a target="_blank" href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">\n            <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134430.png?xxfjava" alt="jdk-8" />\n        </a>\n		<a href="https://v3.vuejs.org/" target="_blank">\n			<img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134539.png?xxfjava" alt="vue">\n		</a>\n		<a href="https://gitee.com/lyt-top/vue-next-admin/blob/master/LICENSE" target="_blank">\n		  <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134340.png?xxfjava" alt="license">\n		</a>\n	</p>\n</div>\n\n## 🍁项目简介\n\n一个通用的前、后端项目模板\n\n一个快速开发管理系统的项目\n\n一个可以生成SpringBoot+Vue代码的项目\n\n一个持续迭代的开源项目\n\n一个程序员的心血合集\n\n度过严寒，终有春日；挺过酷暑，必有丰收。\n\n[GitHub地址](https://github.com/hack-feng/maple-boot/)\n\n[Gitee地址](https://gitee.com/hack-feng/maple-boot)\n\n[文档地址（更新中）](https://www.xiaoxiaofeng.com/category/49)\n\n[管理端演示地址（初版已上线）](https://maple.xiaoxiaofeng.com/)\n\n[网站端演示地址（初版已上线）](https://maple-boot.xiaoxiaofeng.com/)\n\n## ⏳提前准备\n\n项目信息导入完成，可成功启动。\n\n准备数据库表结构，一张简单的系统配置信息表\n\n~~~mysql\nCREATE TABLE `sys_config` (\n	`id` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT \'参数主键\',\n	`config_name` VARCHAR(100) NULL DEFAULT \'\' COMMENT \'参数名称\',\n	`config_key` VARCHAR(100) NULL DEFAULT \'\' COMMENT \'参数键名\',\n	`config_value` VARCHAR(500) NULL DEFAULT \'\' COMMENT \'参数键值\',\n	`config_type` TINYINT(1) NULL DEFAULT \'0\' COMMENT \'是否系统内置\',\n	`create_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'创建人id\',\n	`create_time` DATETIME NULL DEFAULT NULL COMMENT \'创建时间\',\n	`update_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'修改人id\',\n	`update_time` DATETIME NULL DEFAULT NULL COMMENT \'更新时间\',\n	`remark` VARCHAR(500) NULL DEFAULT NULL COMMENT \'备注\',\n	PRIMARY KEY (`id`) USING BTREE\n) COMMENT=\'系统管理-参数配置表\' ENGINE=InnoDB;\n~~~\n\n修改代码生成配置信息，在`maple-admin-generator`模块下的`generator.yml`文件\n\n~~~yml\n# 代码生成\ngen:\n  # 作者\n  author: www.xiaoxiaofeng.com\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.maple.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: true\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n  # 是否继承BaseEntity\n  extendsBaseBean: true\n  # BaseEntity路径\n  baseBeanPackage: com.maple.common.config.bean.BaseEntity\n  # 转换对象工具TransformUtils路径\n  transformUtilsPackage: com.maple.common.util.TransformUtils\n~~~\n\n其中 `BaseEntity` 和 `TransformUtils` 参考[<项目规范>](https://www.xiaoxiaofeng.com/article/1067)中的介绍`对象字段定义`和`实体类转换`部分\n\n## 🚀开始生成\n\n首先，登录系统，进入【生成工具】->【代码生成】菜单下；\n\n![image-20240429095453243](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429095453.png?xxfjava)\n\n导入需要生成的表；\n\n![image-20240429095806631](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429095806.png?xxfjava)\n\n导入后，可以在列表看到导入的表信息，然后点击修改按钮，修改对应的生成配置；\n\n![image-20240429100033471](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429100033.png?xxfjava)\n\n基本信息不变，调整字段信息如下：\n\n![image-20240429101126822](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429101126.png?xxfjava)\n\n生成信息如下，这里放在【系统设置目录下】：\n\n![image-20240429101318321](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429101318.png?xxfjava)\n\n修改后，可以预览代码，可以直接复制我们需要的代码，也可以点击生成按钮，直接生成代码的压缩文件；\n\n![image-20240429101458361](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429101458.png?xxfjava)\n\n导入代码后，解压文件，可以看到我们生成的代码，然后将代码复制到到项目对应的包下；然后执行Sql，Sql中菜单名称可以根据需求进行调整；\n\n![image-20240429102633230](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429102633.png?xxfjava)\n\n放入项目后，重新启动项目，在【系统设置】-> 【角色设置中】给对应的角色赋值改菜单；\n\n![image-20240429104226008](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429104226.png?xxfjava)\n\n然后登录对应角色的账号，便可以看到我们页面功能了；\n\n到此，单表表格的功能已经完成了。\n\n![image-20240429104534967](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429104535.png?xxfjava)\n\n新增/修改页面\n\n![image-20240429110020940](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429110020.png?xxfjava)\n\n## ❤温馨提示\n\n代码生成可以替代很多**基础无难度**的工作，当然这里强调的是基础，包括增删改查接口，如果是复杂页面，牵扯到定制化的功能，肯定还是需要开发人员介入调整的。本项目使用人员是开发人员，目的是简化我们基础代码的开发，加快我们的开发速度。\n\n代码生成的过程中，仍存在些许定制化的功能，例如主键必须是`id`，必须依赖于`TransformUtils`对象转换工具等，更多参照参考[<项目规范>](https://www.xiaoxiaofeng.com/article/1067)中的介绍，为了更好的适应自己的项目，可以针对代码生成的代码进行定制化调整。\n', 4, '2024-08-05 15:50:07', 4, '2024-08-05 15:50:07'),
(5, 5, NULL, '<div align="center">\n	<img src="https://image.xiaoxiaofeng.site/blog/2024/04/15/xxf-20240415111508.svg?xxfjava">\n    <h2>\n        基于SpringBoot+Vue3开发的轻量级快速开发脚手架\n    </h3>\n	<p align="center">\n        <a target="_blank" href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">\n            <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134430.png?xxfjava" alt="jdk-8" />\n        </a>\n		<a href="https://v3.vuejs.org/" target="_blank">\n			<img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134539.png?xxfjava" alt="vue">\n		</a>\n		<a href="https://gitee.com/lyt-top/vue-next-admin/blob/master/LICENSE" target="_blank">\n		  <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134340.png?xxfjava" alt="license">\n		</a>\n	</p>\n</div>\n\n## 🍁项目简介\n\n一个通用的前、后端项目模板\n\n一个快速开发管理系统的项目\n\n一个可以生成SpringBoot+Vue代码的项目\n\n一个持续迭代的开源项目\n\n一个程序员的心血合集\n\n度过严寒，终有春日；挺过酷暑，必有丰收。\n\n[GitHub地址](https://github.com/hack-feng/maple-boot/)\n\n[Gitee地址](https://gitee.com/hack-feng/maple-boot)\n\n[文档地址（更新中）](https://www.xiaoxiaofeng.com/category/49)\n\n[管理端演示地址（初版已上线）](https://maple.xiaoxiaofeng.com/)\n\n[网站端演示地址（初版已上线）](https://maple-boot.xiaoxiaofeng.com/)\n\n## ⏳提前准备\n\n项目信息导入完成，可成功启动。\n\n准备数据库表结构，一张简单的部门信息表\n\n**注意**：主键使用【id】，树表【父部门id】和【祖级列表】字段要为固定的值，详情参考[<项目规范>](https://www.xiaoxiaofeng.com/article/1067)中**树表字段**部分\n\n~~~mysql\nCREATE TABLE `usc_dept` (\n	`id` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT \'部门id\',\n	`parent_id` BIGINT(20) NULL DEFAULT \'0\' COMMENT \'父部门id\',\n	`ancestors` VARCHAR(255) NULL DEFAULT \'\' COMMENT \'祖级列表\',\n	`dept_name` VARCHAR(30) NULL DEFAULT \'\' COMMENT \'部门名称\',\n	`sort_num` BIGINT(20) NULL DEFAULT NULL COMMENT \'显示顺序\',\n	`leader` VARCHAR(20) NULL DEFAULT NULL COMMENT \'负责人\',\n	`phone` VARCHAR(11) NULL DEFAULT NULL COMMENT \'联系电话\',\n	`email` VARCHAR(50) NULL DEFAULT NULL COMMENT \'邮箱\',\n	`status` TINYINT(4) NULL DEFAULT NULL COMMENT \'部门状态\',\n	`create_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'创建人id\',\n	`create_time` DATETIME NULL DEFAULT NULL COMMENT \'创建时间\',\n	`update_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'修改人id\',\n	`update_time` DATETIME NULL DEFAULT NULL COMMENT \'更新时间\',\n	`is_delete` TINYINT(1) NULL DEFAULT \'0\' COMMENT \'删除标志\',\n	PRIMARY KEY (`id`) USING BTREE\n) COMMENT=\'用户中心-部门管理\' ENGINE=InnoDB;\n~~~\n\n修改代码生成配置信息，在`maple-admin-generator`模块下的`generator.yml`文件\n\n~~~yml\n# 代码生成\ngen:\n  # 作者\n  author: www.xiaoxiaofeng.com\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.maple.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: true\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n  # 是否继承BaseEntity\n  extendsBaseBean: true\n  # BaseEntity路径\n  baseBeanPackage: com.maple.common.config.bean.BaseEntity\n  # 转换对象工具TransformUtils路径\n  transformUtilsPackage: com.maple.common.util.TransformUtils\n~~~\n\n其中 `BaseEntity` 和 `TransformUtils` 参考[<项目规范>](https://www.xiaoxiaofeng.com/article/1067)中的介绍`对象字段定义`和`实体类转换`部分\n\n## 🚀开始生成\n\n首先，登录系统，进入【生成工具】->【代码生成】菜单下；\n\n![image-20240429095453243](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429095453.png?xxfjava)\n\n导入需要生成的表；\n\n![image-20240429152620118](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429152620.png?xxfjava)\n\n导入后，可以在列表看到导入的表信息，然后点击修改按钮，修改对应的生成配置；\n\n![image-20240429152646601](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429152646.png?xxfjava)\n\n基本信息不变，调整字段信息如下：\n\n**注意：树形结构表，`parent_id` 和 `ancestors` 在编辑时无需勾选，系统生成代码时会自动处理父级和祖级的信息**\n\n![image-20240429152842288](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429152842.png?xxfjava)\n\n生成信息如下，这里放在【系统设置】目录下，同时选择生成类型为【树表】\n\n**注意：这里的树编码使用【id】字段，树父级编码使用【parent_id】字段，生成代码这里没有做灵活配置，如是别的字段，需要调整生成代码模板**\n\n![image-20240429153323284](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429153323.png?xxfjava)\n\n修改后，可以预览代码，可以直接复制我们需要的代码，也可以点击生成按钮，直接生成代码的压缩文件；\n\n![image-20240429154048037](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429154048.png?xxfjava)\n\n导入代码后，解压文件，可以看到我们生成的代码，然后将代码复制到到项目对应的包下；然后执行sql，sql中菜单名称可以根据需求进行调整；\n\n放入项目后，重新启动项目，在【系统设置】-> 【角色设置中】给对应的角色赋值改菜单；\n\n![image-20240429154220592](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429154220.png?xxfjava)\n\n然后登录对应角色的账号，便可以看到我们页面功能了；\n\n我们初始化一条祖节点数据，后续部门信息皆在此节点上添加，当然也可以不设置祖节点，调整代码将【父部门】设为非必填即可。\n\n~~~sql\nINSERT INTO `usc_dept` (`id`, `parent_id`, `ancestors`, `dept_name`, `sort_num`, `leader`, `phone`, `email`, `status`, `create_id`, `create_time`, `update_id`, `update_time`, `is_delete`) VALUES (1, 0, \'[]\', \'笑小枫\', 0, \'笑小枫\', \'18300000000\', \'1150640979@qq.com\', 1, NULL, NOW(), NULL, NOW(), 0);\n~~~\n\n添加/修改一条数据：\n\n![image-20240429154807859](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429154807.png?xxfjava)\n\n可以看到列表页面在【笑小枫】节点下添加了一条数据；\n\n![image-20240429154819729](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429154819.png?xxfjava)\n\n到此，树表功能就已经完成了。\n\n**注：此文档主要介绍功能使用，源码中部分代码后续有优化，不一定完全和生成的代码一致**\n\n## ❤温馨提示\n\n代码生成可以替代很多**基础无难度**的工作，当然这里强调的是基础，包括增删改查接口，如果是复杂页面，牵扯到定制化的功能，肯定还是需要开发人员介入调整的。本项目使用人员是开发人员，目的是简化我们基础代码的开发，加快我们的开发速度。\n\n代码生成的过程中，仍存在些许定制化的功能，例如主键必须是`id`，必须依赖于`TransformUtils`对象转换工具等，更多参照参考[<项目规范>](https://www.xiaoxiaofeng.com/article/1067)中的介绍，为了更好的适应自己的项目，可以针对代码生成的代码进行定制化调整。\n\n如有任何疑问，或想加入我们，可以联系【[笑小枫](https://www.xiaoxiaofeng.com/author)】。\n\n\n\n', 4, '2024-08-05 15:50:29', 4, '2024-08-05 15:50:29'),
(6, 6, NULL, '<div align="center">\n	<img src="https://image.xiaoxiaofeng.site/blog/2024/04/15/xxf-20240415111508.svg?xxfjava">\n    <h2>\n        基于SpringBoot+Vue3开发的轻量级快速开发脚手架\n    </h3>\n	<p align="center">\n        <a target="_blank" href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">\n            <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134430.png?xxfjava" alt="jdk-8" />\n        </a>\n		<a href="https://v3.vuejs.org/" target="_blank">\n			<img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134539.png?xxfjava" alt="vue">\n		</a>\n		<a href="https://gitee.com/lyt-top/vue-next-admin/blob/master/LICENSE" target="_blank">\n		  <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134340.png?xxfjava" alt="license">\n		</a>\n	</p>\n</div>\n\n## 🍁项目简介\n\n一个通用的前、后端项目模板\n\n一个快速开发管理系统的项目\n\n一个可以生成SpringBoot+Vue代码的项目\n\n一个持续迭代的开源项目\n\n一个程序员的心血合集\n\n度过严寒，终有春日；挺过酷暑，必有丰收。\n\n[GitHub地址](https://github.com/hack-feng/maple-boot/)\n\n[Gitee地址](https://gitee.com/hack-feng/maple-boot)\n\n[文档地址（更新中）](https://www.xiaoxiaofeng.com/category/49)\n\n[管理端演示地址（初版已上线）](https://maple.xiaoxiaofeng.com/)\n\n[网站端演示地址（初版已上线）](https://maple-boot.xiaoxiaofeng.com/)\n\n## ⏳提前准备\n\n项目信息导入完成，可成功启动。\n\n准备数据库表结构，一张主表字典类型表和子表字典数据表\n\n**主表字典类型表**\n\n\n~~~sql\nCREATE TABLE `sys_dict_type` (\n	`id` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT \'字典主键\',\n	`dict_name` VARCHAR(100) NULL DEFAULT \'\' COMMENT \'字典名称\',\n	`dict_code` VARCHAR(100) NULL DEFAULT \'\' COMMENT \'字典类型\',\n	`status` TINYINT(4) NULL DEFAULT \'1\' COMMENT \'状态\',\n	`remark` VARCHAR(500) NULL DEFAULT NULL COMMENT \'备注\',\n	`create_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'创建人id\',\n	`create_time` DATETIME NULL DEFAULT NULL COMMENT \'创建时间\',\n	`update_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'修改人id\',\n	`update_time` DATETIME NULL DEFAULT NULL COMMENT \'更新时间\',\n	PRIMARY KEY (`id`) USING BTREE,\n	UNIQUE INDEX `dict_code` (`dict_code`) USING BTREE\n)COMMENT=\'系统管理-字典类型表\' ENGINE=InnoDB;\n~~~\n\n**子表字典数据表**\n\n~~~mysql\nCREATE TABLE `sys_dict_data` (\n	`id` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT \'字典编码\',\n	`dict_sort` INT(4) NULL DEFAULT \'0\' COMMENT \'字典排序\',\n	`dict_label` VARCHAR(100) NULL DEFAULT \'\' COMMENT \'字典标签\',\n	`dict_value` VARCHAR(100) NULL DEFAULT \'\' COMMENT \'字典键值\',\n	`dict_code` VARCHAR(100) NULL DEFAULT \'\' COMMENT \'字典类型\',\n	`css_class` VARCHAR(100) NULL DEFAULT NULL COMMENT \'样式属性\',\n	`list_class` VARCHAR(100) NULL DEFAULT NULL COMMENT \'表格回显样式\',\n	`is_default` TINYINT(1) NULL DEFAULT \'0\' COMMENT \'是否默认\',\n	`status` TINYINT(4) NULL DEFAULT \'0\' COMMENT \'状态\',\n	`create_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'创建人id\',\n	`create_time` DATETIME NULL DEFAULT NULL COMMENT \'创建时间\',\n	`update_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'修改人id\',\n	`update_time` DATETIME NULL DEFAULT NULL COMMENT \'更新时间\',\n	`remark` VARCHAR(500) NULL DEFAULT NULL COMMENT \'备注\',\n	PRIMARY KEY (`id`) USING BTREE\n) COMMENT=\'系统管理-字典数据表\' NGINE=InnoDB;\n~~~\n\n修改代码生成配置信息，在`maple-admin-generator`模块下的`generator.yml`文件\n\n~~~yml\n# 代码生成\ngen:\n  # 作者\n  author: www.xiaoxiaofeng.com\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.maple.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: true\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n  # 是否继承BaseEntity\n  extendsBaseBean: true\n  # BaseEntity路径\n  baseBeanPackage: com.maple.common.config.bean.BaseEntity\n  # 转换对象工具TransformUtils路径\n  transformUtilsPackage: com.maple.common.util.TransformUtils\n~~~\n\n其中 `BaseEntity` 和 `TransformUtils` 参考[<项目规范>](https://www.xiaoxiaofeng.com/article/1067)中的介绍`对象字段定义`和`实体类转换`部分\n\n## 🚀开始生成\n\n首先，登录系统，进入【生成工具】->【代码生成】菜单下；\n\n![image-20240429095453243](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429095453.png?xxfjava)\n\n导入需要生成的表；\n\n**注意：父子表需要都导入**\n\n![image-20240430095725683](https://image.xiaoxiaofeng.site/blog/2024/04/30/xxf-20240430095726.png?xxfjava)\n\n导入后，可以在列表看到导入的表信息，然后点击修改按钮，修改对应的生成配置；\n\n先修改子表的配置，按照[单表表格模式](https://www.xiaoxiaofeng.com/article/1070)配置即可，这里不再赘述；\n\n配置好子表信息，接下来配置主表信息\n\n![image-20240430100344560](https://image.xiaoxiaofeng.site/blog/2024/04/30/xxf-20240430100344.png?xxfjava)\n\n基本信息不变，调整字段信息如下：\n\n![image-20240430100445901](https://image.xiaoxiaofeng.site/blog/2024/04/30/xxf-20240430100446.png?xxfjava)\n\n生成信息如下，这里放在【系统设置】目录下，同时选择生成类型为【树表】\n\n**注意：这里的树编码使用【id】字段，树父级编码使用【parent_id】字段，生成代码这里没有做灵活配置，如是别的字段，需要调整生成代码模板**\n\n![image-20240429101318321](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429101318.png?xxfjava)\n\n修改后，可以预览代码，可以直接复制我们需要的代码，也可以点击生成按钮，直接生成代码的压缩文件；\n\n![image-20240429101458361](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429101458.png?xxfjava)\n\n导入代码后，解压文件，可以看到我们生成的代码，然后将代码复制到到项目对应的包下；然后执行Sql，Sql中菜单名称可以根据需求进行调整；\n\n![image-20240429102633230](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429102633.png?xxfjava)\n\n放入项目后，重新启动项目，在【系统设置】-> 【角色设置中】给对应的角色赋值改菜单；\n\n![image-20240429104226008](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429104226.png?xxfjava)\n\n然后登录对应角色的账号，便可以看到我们页面功能了；\n\n到此，单表表格的功能已经完成了。\n\n![image-20240429104534967](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429104535.png?xxfjava)\n\n新增/修改页面\n\n![image-20240429110020940](https://image.xiaoxiaofeng.site/blog/2024/04/29/xxf-20240429110020.png?xxfjava)\n\n**注：此文档主要介绍功能使用，源码中部分代码后续有优化，不一定完全和生成的代码一致**\n\n## ❤温馨提示\n\n代码生成可以替代很多**基础无难度**的工作，当然这里强调的是基础，包括增删改查接口，如果是复杂页面，牵扯到定制化的功能，肯定还是需要开发人员介入调整的。本项目使用人员是开发人员，目的是简化我们基础代码的开发，加快我们的开发速度。\n\n代码生成的过程中，仍存在些许定制化的功能，例如主键必须是`id`，必须依赖于`TransformUtils`对象转换工具等，更多参照参考[<项目规范>](https://www.xiaoxiaofeng.com/article/1067)中的介绍，为了更好的适应自己的项目，可以针对代码生成的代码进行定制化调整。\n\n如有任何疑问，或想加入我们，可以联系【[笑小枫](https://www.xiaoxiaofeng.com/author)】。\n', 4, '2024-08-05 15:50:52', 4, '2024-08-05 15:50:52'),
(7, 7, NULL, '<div align="center">\n	<img src="https://image.xiaoxiaofeng.site/blog/2024/04/15/xxf-20240415111508.svg?xxfjava">\n    <h2>\n        基于SpringBoot+Vue3开发的轻量级快速开发脚手架\n    </h3>\n	<p align="center">\n        <a target="_blank" href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">\n            <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134430.png?xxfjava" alt="jdk-8" />\n        </a>\n		<a href="https://v3.vuejs.org/" target="_blank">\n			<img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134539.png?xxfjava" alt="vue">\n		</a>\n		<a href="https://gitee.com/lyt-top/vue-next-admin/blob/master/LICENSE" target="_blank">\n		  <img src="https://image.xiaoxiaofeng.site/blog/2024/04/17/xxf-20240417134340.png?xxfjava" alt="license">\n		</a>\n	</p>\n</div>\n\n## 🍁项目简介\n\n一个通用的前、后端项目模板\n\n一个快速开发管理系统的项目\n\n一个可以生成SpringBoot+Vue代码的项目\n\n一个持续迭代的开源项目\n\n一个程序员的心血合集\n\n度过严寒，终有春日；挺过酷暑，必有丰收。\n\n[GitHub地址](https://github.com/hack-feng/maple-boot/)\n\n[Gitee地址](https://gitee.com/hack-feng/maple-boot)\n\n[文档地址（更新中）](https://www.xiaoxiaofeng.com/category/49)\n\n[管理端演示地址（初版已上线）](https://maple.xiaoxiaofeng.com/)\n\n[网站端演示地址（初版已上线）](https://maple-boot.xiaoxiaofeng.com/)\n\n## 🌸实现思路\n\n先说说菜单权限，其实很简单，市面上通用的实现，通过角色配置对应菜单，然后用户选择对应的角色，然后后端接口汇总出用户拥有的菜单，前端进行菜单路由渲染即可。\n\n再说说按钮权限，同菜单权限，通过角色配置对应按钮权限，然后用户选择对应的角色，然后后端接口汇总出用户拥有的按钮权限，进入页面时，前端通过判断是否拥有权限，对按钮权限是否展示进行控制。\n\n最后说说数据权限，数据权限控制要看具体的需求，这里实现的是，以部门作为数据权限的划分，使用角色来控制对用的权限，权限分为5档，分别是：全部数据权限、自定数据权限、本部门数据权限、本部门及以下数据权限、本人创建的数据权限。如果拥有多个角色，之间用or来连接。通过切面将需要数据权限控制接口，拼入权限控制条件的参数。然后传入sql中过滤查询。\n\n具体的实现和使用过程在下文详细描述。\n\n## 🌲菜单权限\n\n详细的介绍一下菜单权限是怎么使用的吧，代码就不过多赘述了，详细可以看代码\n\n> 简述步骤：\n>\n> 1. 首先在【菜单管理】里面可以维护菜单按钮信息。\n> 2. 维护好之后，在【角色管理】里面选择角色对应的菜单权限。\n> 3. 维护好之后，在【用户管理】里面选择对应的角色即可\n\n1. 首先在【菜单管理】里面可以维护菜单按钮信息。如果是目录就选择目录，如果是菜单页面就选择菜单。\n\n![image-20240520104923352](https://image.xiaoxiaofeng.site/blog/2024/05/20/xxf-20240520104923.png?xxfjava)\n\n2. 维护好之后，在【角色管理】里面选择角色对应的菜单权限。\n\n![image-20240520104254428](https://image.xiaoxiaofeng.site/blog/2024/05/20/xxf-20240520104425.png?xxfjava)\n\n3. 维护好之后，在【用户管理】里面选择对应的角色即可，一个用户可以对应多个角色，这些角色会有重复的菜单，展示的时候会根据菜单id进行去重处理。\n\n![image-20240520104616594](https://image.xiaoxiaofeng.site/blog/2024/05/20/xxf-20240520104616.png?xxfjava)\n\n## 🍀按钮权限\n\n按钮权限配置同菜单权限，这里就不过多描述，菜单类型选择按钮即可，权限标志要确保唯一。其中权限标志建议`模块:功能:按钮`这样的格式配置，eg:`system:user:update`。方便使用，更好的防止不同按钮权限标志重置。\n\n> 简述步骤：\n>\n> 1. 配置按钮权限、角色、用户\n> 2. 引用authFunction工具类\n> 3. 使用v-if="auth(权限标志)"判断\n\n配置好之后，需要在vue代码中对应的按钮展示地方进行控制，这里以用户管理为例，代码可以参考`/views/system/user/index.vue`。\n\n在登录的时候，会获取到用户拥有的按钮权限，然后引用`import { auth } from \'/@/utils/authFunction\';`封装的按钮权限判断方法，在按钮控制处添加`v-if="auth(\'system:user:update\')"`判断即可。\n\n## 🥦数据权限\n\n### 简单介绍\n\n这里简单说说，数据权限控制有时候千奇百怪，很多时候需要特殊处理，这里只是通用的场景，并不能覆盖所有的场景，使用时需要注意，判断是否符合自己的需求。\n\n数据权限分为5档，需要在角色上配置。\n\n如果一个人配置了多个角色，数据以or的形式关联。数据查询最大范围的数据。\n\n例如：\n\n【场景一】配置了**拥有全部数据权限**，别的条件都无视了\n\n【场景二】配置了**自定义数据权限**和**本人创建的数据权限**，则可以同时看到自定义部门数据和本人创建的数据\n\n【场景三】配置了**本部门及以下数据权限**、**本部门数据权限**和**本人创建的数据**权限，则可以同时看到本部门及以下数据和本人创建的数据\n\n> 全部数据权限：不加任何限制，查全部数据\n>\n> 自定义数据权限：查询关联部门的数据\n>\n> 本部门数据权限：部门ID为自己所属部门的数据\n>\n> 本部门及以下数据权限：部门ID为自己所属部门的数据和这个部门下数据\n>\n> 本人创建的数据权限：只查看\n\n![image-20240520110202095](https://image.xiaoxiaofeng.site/blog/2024/05/20/xxf-20240520110202.png?xxfjava)\n\n### 数据库配置\n\n当然，使用时要添加我们的权限注入\n\n首先要确定需要添加数据权限过滤的表中要有归属部门ID和数据创建人ID\n\n这里以`sys_config`为例，使用`belong_dept_id`和`create_id`来控制权限\n\n**注意**：这里默认用户数据为一套，如果是管理端和用户端多套用户，且用户ID都是自动递增的情况，需要做字段区分或来源区分。\n\n~~~sql\nCREATE TABLE `sys_config` (\n	`id` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT \'参数主键\',\n	`config_name` VARCHAR(100) NULL DEFAULT \'\' COMMENT \'参数名称\',\n	`config_key` VARCHAR(100) NULL DEFAULT \'\' COMMENT \'参数键名\',\n	`config_value` VARCHAR(500) NULL DEFAULT \'\' COMMENT \'参数键值\',\n	`config_type` TINYINT(1) NULL DEFAULT \'0\' COMMENT \'是否内置\',\n	`belong_dept_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'归属部门id\',\n	`create_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'创建人id\',\n	`create_time` DATETIME NULL DEFAULT NULL COMMENT \'创建时间\',\n	`update_id` BIGINT(20) NULL DEFAULT NULL COMMENT \'修改人id\',\n	`update_time` DATETIME NULL DEFAULT NULL COMMENT \'更新时间\',\n	`remark` VARCHAR(500) NULL DEFAULT NULL COMMENT \'备注\',\n	PRIMARY KEY (`id`) USING BTREE\n)COMMENT=\'系统管理-参数配置表\' COLLATE=\'utf8_general_ci\' ENGINE=InnoDB;\n~~~\n\n### 项目中使用\n\n在需要做数据权限区分的controller上使用`@DataScope`注解。\n\n> `DataScope`的两个参数介绍\n>\n> `deptAlias`默认`belong_dept_id`，查询数据所在表的部门ID，如为多表关联，请指定表的别名，如：`d.dept_id`\n>\n> `userAlias`默认`create_id`，查询数据所在表的用户ID，如为多表关联，请指定表的别名，如：`u.create_id`\n\n请求参数要继承`BaseQuery`类，切面会判断是否属于`BaseQuery`类，并把数据权限参数解析放在`dataScope`参数上。\n\n将`dataScope`参数传入Mapper中，在sql条件里面添加`${dataScope}`。\n\n**【注意】不要自己使用`dataScope`参数，切面会先清空`dataScope`参数，防止sql注入。**\n', 4, '2024-08-05 15:51:21', 4, '2024-08-05 15:51:21'),
(8, 8, NULL, '', 4, '2024-08-05 15:59:49', 4, '2024-08-05 16:01:50'),
(9, 9, NULL, '', 4, '2024-08-05 16:01:22', 4, '2024-08-05 16:01:22'),
(10, 10, NULL, '', 4, '2024-08-05 16:03:24', 4, '2024-08-05 16:03:24'),
(11, 13, NULL, '', 4, '2024-08-05 16:05:39', 4, '2024-08-05 16:05:39');

CREATE TABLE IF NOT EXISTS `web_menu` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '菜单ID',
    `title` varchar(50) DEFAULT NULL COMMENT '菜单名称',
    `image` varchar(255) DEFAULT NULL COMMENT '菜单大图',
    `view_type` tinyint(4) DEFAULT '0' COMMENT '展示类型',
    `menu_type` char(1) DEFAULT '' COMMENT '菜单类型（H页头菜单 F页脚菜单 N内部跳转路由）',
    `parent_id` bigint(20) DEFAULT '0' COMMENT '父菜单ID',
    `ancestors` varchar(255) DEFAULT NULL COMMENT '祖级菜单',
    `sort_num` bigint(20) DEFAULT NULL COMMENT '显示顺序',
    `ui_template` varchar(50) DEFAULT NULL COMMENT '展示模板',
    `name` varchar(50) DEFAULT NULL COMMENT '路由名称',
    `path` varchar(200) DEFAULT NULL COMMENT '路由地址',
    `component` varchar(200) DEFAULT NULL COMMENT '组件路径',
    `link_url` varchar(255) DEFAULT NULL COMMENT '链接地址',
    `is_link` tinyint(1) DEFAULT '0' COMMENT '是否外链',
    `status` tinyint(4) DEFAULT NULL COMMENT '菜单状态（0正常 1停用）',
    `icon` varchar(100) DEFAULT '#' COMMENT '菜单图标',
    `keywords` varchar(100) DEFAULT NULL COMMENT '关键字',
    `description` varchar(255) DEFAULT NULL COMMENT '描述',
    `remark` varchar(500) DEFAULT '' COMMENT '备注',
    `create_id` bigint(20) DEFAULT NULL COMMENT '创建人id',
    `create_time` datetime DEFAULT NULL COMMENT '创建时间',
    `update_id` bigint(20) DEFAULT NULL COMMENT '修改人id',
    `update_time` datetime DEFAULT NULL COMMENT '更新时间',
    PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=36 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='用户中心-菜单权限表';

INSERT INTO `web_menu` (`id`, `title`, `image`, `view_type`, `menu_type`, `parent_id`, `ancestors`, `sort_num`, `ui_template`, `name`, `path`, `component`, `link_url`, `is_link`, `status`, `icon`, `keywords`, `description`, `remark`, `create_id`, `create_time`, `update_id`, `update_time`) VALUES
(1, '顶部导航', NULL, 0, 'H', 0, NULL, 1, NULL, NULL, NULL, NULL, NULL, 0, 1, '#', NULL, NULL, '', 1, '2024-08-01 13:44:26', 1, '2024-08-01 13:44:27'),
(2, '尾部导航', NULL, 0, 'F', 0, NULL, 2, NULL, NULL, NULL, NULL, NULL, 0, 1, '#', NULL, NULL, '', 1, '2024-08-01 13:44:26', 1, '2024-08-01 13:44:27'),
(3, '路由导航', NULL, 0, 'R', 0, NULL, 99, '', NULL, NULL, NULL, '', 0, 1, '', '', '', '路由导航，只供内部跳转使用', 4, '2024-07-23 13:26:51', 4, '2024-07-23 13:27:00'),
(4, '首页', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141746.jpg?xxfjava', 0, 'H', 1, '1', 1, '', NULL, 'home', '', '', 0, 1, '', '笑小枫,java,SpringBoot,程序员,MapleBoot', '欢迎来到笑小枫，我们致力于打造一个开放、友好的技术社区，让知识和智慧在这里自由碰撞、绽放。', '', 1, '2024-06-05 16:33:40', 1, '2024-06-05 17:31:21'),
(5, '小枫博客录', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141721.jpg?xxfjava', 0, 'H', 1, '1', 2, 'blog', NULL, 'article1', '', '', 0, 1, '', '笑小枫,java,SpringBoot,程序员,博客', '笑小枫汇聚了众多技术文章，涵盖了编程、软件开发、计算机技术等各个方面，旨在为您提供丰富的技术知识和实践经验。', '', 1, '2024-06-06 13:30:28', 4, '2024-08-05 15:52:09'),
(6, '小枫资源库', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141743.jpg?xxfjava', 0, 'H', 1, '1', 3, '', NULL, 'download', '', '', 0, 1, '', '笑小枫,java资源,开发软件,程序员,资源下载', '笑小枫拥有海量的资源，包括教程、案例、工具、代码库等，为您的学习和实践提供了全面的支持。', '', 1, '2024-06-06 13:30:48', 1, '2024-06-06 13:30:48'),
(7, '小枫链接集', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141751.jpg?xxfjava', 0, 'H', 1, '1', 4, '', NULL, 'links', '', '', 0, 1, '', '笑小枫,java链接,链接地址,程序员,java链接', '笑小枫的链接地址丰富多样，无论是寻找学习资源、解决技术难题，还是探索行业趋势，都能为您提供实用、高效的帮助。', '', 1, '2024-06-06 13:31:05', 1, '2024-07-09 14:52:50'),
(8, '关于笑小枫', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141731.jpg?xxfjava', 0, 'H', 1, '1', 5, '', NULL, 'author', '', '', 0, 1, '', '笑小枫,java,SpringBoot,程序员,博客', '欢迎来到笑小枫，一个专注于Java后端技术的专业平台！我们致力于为广大Java开发者提供最新、最实用的技术分享和交流机会。', '', 1, '2024-06-06 13:31:23', 1, '2024-06-06 13:31:23'),
(9, '面试合集', NULL, 0, 'H', 1, '1', 7, 'blog', NULL, 'interview', '', '', 0, 1, '', NULL, NULL, '', 1, '2024-06-12 13:45:55', 1, '2024-07-08 14:52:50'),
(10, 'JAVA面试', NULL, 0, 'H', 9, '1,9', 1, 'blog', NULL, 'interview-java', '', '', 0, 1, '', NULL, NULL, '', 1, '2024-06-12 13:47:05', 1, '2024-07-08 14:53:50'),
(11, '前端面试', NULL, 0, 'H', 9, '1,9', 2, 'blog', NULL, 'interview-front', '', '', 0, 1, '', NULL, NULL, '', 1, '2024-06-12 13:47:23', 1, '2024-07-08 14:55:47'),
(12, '分布式', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141737.jpg?xxfjava', 0, 'H', 10, '1,9,10', 1, 'blog', NULL, 'nterview-fenbushi', '', '', 0, 1, '', NULL, NULL, '', 1, '2024-06-12 13:49:05', 1, '2024-07-08 14:54:42'),
(13, 'JAVA基础', NULL, 0, 'H', 10, '1,9,10', 2, 'blog', NULL, 'interview-java-basic', '', 'https://www.baidu.com', 0, 1, '', NULL, NULL, '', 1, '2024-06-12 13:53:33', 4, '2024-07-22 15:12:30'),
(14, '数据库', NULL, 0, 'H', 9, '1,9', 3, 'blog', NULL, 'database', '', '', 0, 1, '', NULL, NULL, '', 1, '2024-06-12 14:03:51', 1, '2024-07-08 14:56:41'),
(15, '个人中心', NULL, 0, 'R', 3, '3', 0, '', NULL, 'my', NULL, '', 0, 1, '', '笑小枫,个人中心,程序员', '个人中心，尽情的DIY自己吧，这里任你疯狂澎湃，给予你最大的自由。', '', 4, '2024-07-25 13:52:14', 4, '2024-07-25 13:52:14'),
(16, '首页', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141746.jpg?xxfjava', 0, 'F', 2, '2', 1, '', NULL, 'home', '', '', 0, 1, '', '笑小枫,java,SpringBoot,程序员,MapleBoot', '欢迎来到笑小枫，我们致力于打造一个开放、友好的技术社区，让知识和智慧在这里自由碰撞、绽放。', '', 1, '2024-06-05 16:33:40', 1, '2024-06-05 17:31:21'),
(17, '小枫博客录', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141721.jpg?xxfjava', 0, 'F', 2, '2', 2, 'blog', NULL, 'article', '', '', 0, 1, '', '笑小枫,java,SpringBoot,程序员,博客', '笑小枫汇聚了众多技术文章，涵盖了编程、软件开发、计算机技术等各个方面，旨在为您提供丰富的技术知识和实践经验。', '', 1, '2024-06-06 13:30:28', 4, '2024-07-22 15:12:18'),
(18, '小枫资源库', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141743.jpg?xxfjava', 0, 'F', 2, '2', 3, '', NULL, 'download', '', '', 0, 1, '', '笑小枫,java资源,开发软件,程序员,资源下载', '笑小枫拥有海量的资源，包括教程、案例、工具、代码库等，为您的学习和实践提供了全面的支持。', '', 1, '2024-06-06 13:30:48', 1, '2024-06-06 13:30:48'),
(19, '小枫链接集', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141751.jpg?xxfjava', 0, 'F', 2, '2', 4, '', NULL, 'links', '', '', 0, 1, '', '笑小枫,java链接,链接地址,程序员,java链接', '笑小枫的链接地址丰富多样，无论是寻找学习资源、解决技术难题，还是探索行业趋势，都能为您提供实用、高效的帮助。', '', 1, '2024-06-06 13:31:05', 1, '2024-07-09 14:52:50'),
(20, '关于笑小枫', 'https://image.xiaoxiaofeng.site/blog/2024/06/19/xxf-20240619141731.jpg?xxfjava', 0, 'F', 2, '2', 5, '', NULL, 'author', '', '', 0, 1, '', '笑小枫,java,SpringBoot,程序员,博客', '欢迎来到笑小枫，一个专注于Java后端技术的专业平台！我们致力于为广大Java开发者提供最新、最实用的技术分享和交流机会。', '', 1, '2024-06-06 13:31:23', 1, '2024-06-06 13:31:23'),
(21, '小枫博客录', '', 0, 'F', 16, '2,16', NULL, 'blog', NULL, 'article', NULL, '', 0, 1, '', '', '', '', 4, '2024-08-01 14:21:26', 4, '2024-08-01 14:21:26'),
(22, '小枫资源库', '', 0, 'F', 16, '2,16', NULL, '', NULL, 'download', NULL, '', 0, 1, '', '', '', '', 4, '2024-08-01 15:34:02', 4, '2024-08-01 15:34:02');

CREATE TABLE IF NOT EXISTS `web_menu_category` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
    `web_menu_id` bigint(20) NOT NULL COMMENT '菜单id',
    `category_id` bigint(20) NOT NULL COMMENT '类目id',
    `create_id` bigint(20) DEFAULT NULL COMMENT '创建人',
    `create_time` datetime DEFAULT NULL COMMENT '创建日期',
    `update_id` bigint(20) NOT NULL COMMENT '更新人',
    `update_time` datetime DEFAULT NULL COMMENT '更新日期',
    PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='网站用户操作表';

INSERT INTO `web_menu_category` (`id`, `web_menu_id`, `category_id`, `create_id`, `create_time`, `update_id`, `update_time`) VALUES
(1, 5, 1, 4, '2024-08-05 15:52:09', 4, '2024-08-05 15:52:09'),
(2, 5, 2, 4, '2024-08-05 15:52:09', 4, '2024-08-05 15:52:09');

CREATE TABLE IF NOT EXISTS `web_user` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
    `user_no` varchar(64) DEFAULT NULL COMMENT '用户账号',
    `openid` varchar(64) NOT NULL COMMENT '微信小程序唯一标识符',
    `unionid` varchar(50) DEFAULT NULL COMMENT '微信开放平台唯一标识符',
    `nick_name` varchar(64) DEFAULT NULL COMMENT '昵称',
    `sex` tinyint(4) DEFAULT NULL COMMENT '性别',
    `email` varchar(128) DEFAULT NULL COMMENT '邮箱',
    `wechat_name` varchar(64) DEFAULT NULL COMMENT '微信名称',
    `user_desc` varchar(255) DEFAULT NULL COMMENT '用户描述',
    `inviter_user_id` bigint(20) DEFAULT NULL COMMENT '邀请用户ID',
    `head_portrait_link` varchar(2000) DEFAULT NULL COMMENT '头像链接',
    `status` tinyint(4) DEFAULT '1' COMMENT '用户状态',
    `is_delete` tinyint(1) DEFAULT '0' COMMENT '删除状态',
    `create_id` bigint(20) DEFAULT NULL COMMENT '创建人',
    `create_time` datetime DEFAULT NULL COMMENT '创建日期',
    `update_id` bigint(20) DEFAULT NULL COMMENT '更新人',
    `update_time` datetime DEFAULT NULL COMMENT '更新日期',
    `version` bigint(20) DEFAULT '0' COMMENT '版本号',
    PRIMARY KEY (`id`) USING BTREE,
    UNIQUE KEY `idx_openid` (`openid`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='网站用户表';

CREATE TABLE IF NOT EXISTS `web_user_comment` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',
    `data_id` bigint(20) DEFAULT NULL COMMENT '主数据ID',
    `top_id` bigint(20) DEFAULT '0' COMMENT '祖评论ID',
    `parent_id` bigint(20) DEFAULT '0' COMMENT '父评论ID',
    `user_id` bigint(20) NOT NULL COMMENT '发表用户id',
    `to_user_id` bigint(20) DEFAULT NULL COMMENT '回复用户id',
    `content` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '评论内容',
    `comment_type` tinyint(4) DEFAULT NULL COMMENT '评论类型',
    `status` tinyint(4) DEFAULT NULL COMMENT '状态',
    `like_num` int(11) DEFAULT '0' COMMENT '点赞数量',
    `comment_num` int(11) DEFAULT '0' COMMENT '评论数量',
    `is_read` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否阅读',
    `is_delete` tinyint(1) DEFAULT '0' COMMENT '是否删除',
    `create_id` bigint(20) DEFAULT NULL COMMENT '创建人',
    `create_time` datetime DEFAULT NULL COMMENT '创建日期',
    `update_id` bigint(20) DEFAULT NULL COMMENT '更新人',
    `update_time` datetime DEFAULT NULL COMMENT '更新日期',
    PRIMARY KEY (`id`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='网站用户评论表';

CREATE TABLE IF NOT EXISTS `web_user_operation` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
    `data_type` tinyint(4) NOT NULL DEFAULT '1' COMMENT '类型',
    `data_id` bigint(20) NOT NULL COMMENT '数据id',
    `user_id` bigint(20) NOT NULL COMMENT '用户id',
    `is_read` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否阅读',
    `is_download` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否下载',
    `is_like` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否点赞',
    `is_collect` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否收藏',
    `is_delete` tinyint(1) DEFAULT '0' COMMENT '是否删除',
    `create_id` bigint(20) DEFAULT NULL COMMENT '创建人',
    `create_time` datetime DEFAULT NULL COMMENT '创建日期',
    `update_id` bigint(20) NOT NULL COMMENT '更新人',
    `update_time` datetime DEFAULT NULL COMMENT '更新日期',
    PRIMARY KEY (`id`) USING BTREE,
    KEY `idx_title_id` (`data_type`,`data_id`) USING BTREE
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='网站用户操作表';
